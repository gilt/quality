GET     /_internal_/healthcheck                                   controllers.Healthchecks.index()

GET     /                                                         controllers.Application.index(page: Int ?= 0)

GET     /:org                                                     controllers.Dashboard.index(org: String)
GET     /:org/incidents/                                          controllers.Incidents.index(org: String, team_key: Option[String] ?= None, has_team: Option[String] ?= None, has_plan: Option[String] ?= None, has_grade: Option[String] ?= None, page: Int ?= 0)
GET     /:org/incidents/create                                    controllers.Incidents.create(org: String, teamKey: Option[String] ?= None)
POST    /:org/incidents/postCreate                                controllers.Incidents.postCreate(org: String)
GET     /:org/incidents/edit                                      controllers.Incidents.edit(org: String, id: Long)
POST    /:org/incidents/postEdit                                  controllers.Incidents.postEdit(org: String, id: Long)
POST    /:org/incidents/delete/:id                                controllers.Incidents.postDeleteById(org: String, id: Long)
GET     /:org/incidents/:id                                       controllers.Incidents.show(org: String, id: Long)

GET     /:org/plans/:id                                           controllers.Plans.getById(org: String, id: Long)
GET     /:org/plans/uploadByIncidentId/:incident_id               controllers.Plans.uploadByIncidentId(org: String, incident_id: Long)
POST    /:org/plans/uploadByIncidentId/:incident_id               controllers.Plans.postUploadByIncidentId(org: String, incident_id: Long)
POST    /:org/plans/postNoPlan/:incident_id                       controllers.Plans.postNoPlan(org: String, incident_id: Long)
POST    /:org/plans/deleteById/:id                                controllers.Plans.postDeleteById(org: String, id: Long, incident_id: Long)
POST    /:org/plans/grade/:id                                     controllers.Plans.postGrade(org: String, id: Long, score: Int)

GET     /:org/teams/                                              controllers.Teams.index(org: String, key: Option[String] ?= None, page: Int ?= 0)
GET     /:org/teams/create                                        controllers.Teams.create(org: String)
POST    /:org/teams/postCreate                                    controllers.Teams.postCreate(org: String)
GET     /:org/teams/:key                                          controllers.Teams.show(org: String, key: String, incidentsPage: Int ?= 0)
POST    /:org/teams/delete/:key                                   controllers.Teams.postDeleteByKey(org: String, key: String)

GET     /:org/meetings/                                           controllers.Meetings.index(org: String, page: Int ?= 0)
GET     /:org/meetings/:id                                        controllers.Meetings.show(org: String, id: Long, reviewTeamsPage: Int ?= 0, reviewPlansPage: Int ?= 0)
POST    /:org/meetings/delete/:id                                 controllers.Meetings.postDeleteById(org: String, id: Long)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                             controllers.Assets.at(path="/public", file)

